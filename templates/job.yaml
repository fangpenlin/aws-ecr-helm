apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "aws-ecr.fullname" . }}
  labels:
    app.kubernetes.io/managed-by: {{.Release.Service | quote }}
    app.kubernetes.io/instance: {{.Release.Name | quote }}
    helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  # TODO: DRY this repeating code
  template:
    metadata:
      name: {{ include "aws-ecr.fullname" . }}
      labels:
        app.kubernetes.io/managed-by: {{.Release.Service | quote }}
        app.kubernetes.io/instance: {{.Release.Name | quote }}
        helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    spec:
      serviceAccountName: {{ .Values.serviceAccountName }}
      restartPolicy: Never
      containers:
      - name: kubectl
        imagePullPolicy: IfNotPresent
        image: fangpenlin/aws-kubectl:0.0.0
        env:
          - name: AWS_ACCOUNT
            value: {{ required "Value .Values.aws.aws_account is required" .Values.aws.aws_account | quote }}
          - name: AWS_REGION
            value: {{ required "Value .Values.aws.aws_region is required" .Values.aws.aws_region | quote }}
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: {{ required "Value .Values.aws.secret_name is required" .Values.aws.secret_name }}
                key: aws-access-key-id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: {{ required "Value .Values.aws.secret_name is required" .Values.aws.secret_name }}
                key: aws-secret-access-key
          - name: DOCKER_LOGIN
            value: AWS
          - name: NAMESPACES
            value: {{ join "," .Values.namespaces | quote }}
        command:
        - "/bin/sh"
        - "-c"
        - |
          DOCKER_PASSWORD=`aws ecr get-login --region ${AWS_REGION} --registry-ids ${AWS_ACCOUNT} | cut -d' ' -f6`
          DOCKER_REGISTRY_SERVER=https://${AWS_ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com
          # ref: https://stackoverflow.com/a/27703327/25077
          for n in $(echo $NAMESPACES | sed "s/,/ /g")
          do
            kubectl delete -n $n secret aws-registry || true
            kubectl create -n $n secret docker-registry aws-registry \
              --docker-server=$DOCKER_REGISTRY_SERVER \
              --docker-username=$DOCKER_LOGIN \
              --docker-password=$DOCKER_PASSWORD \
              --docker-email=none
            kubectl patch -n $n serviceaccount default -p '{"imagePullSecrets":[{"name":"aws-registry"}]}'
          done
